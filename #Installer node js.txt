# Procedure d'installation de node.js 
# installs fnm (Fast Node Manager)
curl -fsSL https://fnm.vercel.app/install | bash
source /home/ec2-user/.bashrc
# download and install Node.js
fnm use --install-if-missing 20

# verifies the right Node.js version is in the environment
node -v # should print `v20.15.0`

# verifies the right NPM version is in the environment
npm -v # should print `10.7.0`

#on revient au home 
cd ~
# on install la bibliotechque express
npm install express
# on cree le fichier server.js qui va comporter le serveur 
nano server.js
# on lance le serveur en background + la journalisation
node server.js >> journal.log & 
# on monitore le journal 
tail -f journal.log 
# script home.js
sudo nano home.js
// home.js - Page d'accueil
const http = require('http');

const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/html' });
  res.end('<h1>Je suis dans le home</h1>');
});

const port = process.env.PORT || 3000;
server.listen(port, () => {
  console.log(`Serveur en cours d'exécution sur le port ${port}`);
});

# script help.js et on y insère le script de journalisation et le place dans un fichier
sudo nano help.php
// help.js - Page d'aide
const http = require('http');

const server = http.createServer((req, res) => {
  res.writeHead(200, { 'Content-Type': 'text/html' });
  res.end('<h1>Je suis dans help</h1>');

  // Journalisation dans un fichier (exemple)
  const logMessage = `Accès à la page help - ${new Date().toISOString()}\n`;
  // Vous pouvez enregistrer ce message dans un fichier ici
});

const port = process.env.PORT || 3000;
server.listen(port, () => {
  console.log(`Serveur en cours d'exécution sur le port ${port}`);
});
